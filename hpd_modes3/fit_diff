#!/usr/bin/python3
# For each file calculate differences between each pair of modes.
# (ratio of slopes and horizontal shift)
#
# Data is taken from */modes.dat (created by fit_modes script)

import os
import os.path
import re
import numpy
import math
import matplotlib.pyplot as plt
import scipy.optimize
import argparse


################################
# Single argument: mod file

parser = argparse.ArgumentParser()
parser.add_argument('modfile')

args = parser.parse_args()

################################

if not os.path.isfile(args.modfile):
  print("Error: file not found: %s" %(args.modfile))
  exit(1)

pref, e = os.path.splitext(args.modfile)
outf = open(pref + '.dif', 'w')

files = {}
for l in open(args.modfile):
  if l[0] == '#': continue
  (fpref,t,n,g,e,ttc,xl,xr,xc,yc,sl,sl_e) = l.split()
  mode = {'t':int(t), 'n':n, 'xl':float(xl), 'xr':float(xr),
          'xc':float(xc), 'yc':float(yc), 'sl':float(sl), 'sl_e':float(sl_e)}
  if not fpref in files: files[fpref] = {'g':float(g), 'e': float(e), 'ttc': float(ttc), 'modes':[]}
  files[fpref]['modes'].append(mode)

# select all mode pairs in each file
for fpref in sorted(files):
  print(fpref, files[fpref]['ttc'])
  for m1 in files[fpref]['modes']:
    for m2 in files[fpref]['modes']:
      if m2['t'] <= m1['t']: continue
      sl   = m2['sl']/m1['sl']
      sl_e = numpy.abs(m2['sl_e']/m1['sl']) + numpy.abs(m1['sl_e']*m2['sl']/m1['sl']**2)
      print("%-30s %02d.%02d  %.3f %.3f %.3f  %e %e"\
         %(fpref, m1['t'],m2['t'],
           files[fpref]['g'], files[fpref]['e'], files[fpref]['ttc'],
           sl, sl_e), file=outf)
